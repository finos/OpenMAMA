name: Build and Deploy

on: push

jobs:
  linux-build:
    name: Linux
    runs-on: ubuntu-20.04
    continue-on-error: true
    container:
      image: ${{ matrix.image }}
    strategy:
      matrix:
        include:
          - image: openmama/openmama-dev:centos-7
            package_type: rpm
            distro: el
            distro_version: 7
          - image: openmama/openmama-dev:centos-stream8
            package_type: rpm
            distro: centos
            distro_version: 8
          - image: openmama/openmama-dev:centos-stream9
            package_type: rpm
            distro: centos
            distro_version: 9
          - image: openmama/openmama-dev:ubuntu-18.04
            package_type: deb
            distro: ubuntu
            distro_version: bionic
          - image: openmama/openmama-dev:ubuntu-20.04
            package_type: deb
            distro: ubuntu
            distro_version: focal
          - image: openmama/openmama-dev:ubuntu-22.04
            package_type: deb
            distro: ubuntu
            distro_version: jammy
    steps:
    - name: Check out the code
      uses: actions/checkout@v1
    - name: Run Linux build
      env:
        CLOUDSMITH_API_KEY: ${{ secrets.CLOUDSMITH_API_KEY }}
      run: ./devops/build/ci-run.sh
    - name: Find the package
      run: 'echo PKG=`find ./dist -name "*.${{ matrix.package_type }}"` >> $GITHUB_ENV'
    - name: Archive package as an artifact
      uses: actions/upload-artifact@v1
      with:
        name: package
        path: ${{ env.PKG }}

  windows-build:
    name: Windows
    runs-on: ${{ matrix.os }}
    continue-on-error: true
    strategy:
      matrix:
        include:
          - os: windows-2019
            platform: x86
            generator: Visual Studio 16 2019
            args: -A Win32
            vcver: msvc2019
          - os: windows-2019
            platform: x64
            generator: Visual Studio 16 2019
            args: -A x64
            vcver: msvc2019
    steps:
    - uses: actions/checkout@v1
    - name: Run Windows Build
      run: ./devops/build/ci-run.bat
      env:
        PLATFORM: ${{ matrix.platform }}
        GENERATOR: ${{ matrix.generator }}
        EXTRA_ARGS: ${{ matrix.args }}
        VCVER: ${{ matrix.vcver }}
    - uses: actions/upload-artifact@v2
      with:
        name: package
        path: '*.zip'

  macos-build:
    name: Build and Test for MacOS
    runs-on: macos-latest
    continue-on-error: true
    steps:
    - uses: actions/checkout@v1
    - name: Run MacOS Build
      run: ./devops/build/ci-run.macos.sh
